<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.steelrain.springboot.lilac.mapper.LectureNoteMapper">
    <insert id="saveDefaultLectureNote" useGeneratedKeys="true" keyProperty="id" parameterType="LectureNoteDTO">
        INSERT INTO tbl_lecture(member_id,title) VALUE(#{memberId},#{title})
    </insert>

    <insert id="saveLectureNote" useGeneratedKeys="true" keyProperty="id" parameterType="LectureNoteDTO">
        INSERT INTO tbl_lecture(member_id,title,description,license_id,subject_id) VALUE
            (#{memberId},#{title},#{description},#{licenseId},#{subjectId})
    </insert>

    <delete id="deleteLectureNote" parameterType="java.lang.Long">
        DELETE FROM tbl_lecture WHERE id=#{noteId}
    </delete>

    <update id="updateLectureNote" parameterType="LectureNoteDTO">
        UPDATE tbl_lecture SET license_id=#{licenseId} , subject_id=#{subjectId} , title=#{title} , description=#{description} , progress=#{progress} WHERE id = #{id};
    </update>

    <insert id="addVideoIdList" parameterType="PlayListVideoDTO" >
        INSERT INTO ref_tbl_lecture_youtube(lecture_id,lecture_member_id,youtube_id) VALUES
            <foreach item="item" collection="list" separator=",">
                (#{item.lectureId},#{item.lectureMemberId},#{item.youtubeId})
            </foreach>
    </insert>

    <resultMap id="findLectureNoteListByMemberMap" type="LectureNoteByMemberDTO">
        <result property="noteId" column="id" />
        <result property="noteTitle" column="title" />
        <result property="playListId" column="youtube_playlist_id" />
    </resultMap>
    <select id="findLectureNoteListByMember" parameterType="java.lang.Long" resultMap="findLectureNoteListByMemberMap">
        SELECT tmp.id, tmp.title, IFNULL(yt.youtube_playlist_id, -1) AS youtube_playlist_id
        FROM (SELECT lec.id, lec.title, ref.youtube_id
              FROM tbl_lecture lec LEFT JOIN ref_tbl_lecture_youtube ref
                                             ON lec.id = ref.lecture_id
              WHERE lec.member_id = #{memberId}) as tmp LEFT JOIN tbl_youtube yt
                                                        ON tmp.youtube_id = yt.id
        GROUP BY tmp.id, yt.youtube_playlist_id
    </select>
</mapper>